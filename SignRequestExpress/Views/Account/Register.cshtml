@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@model SignRequestExpress.Models.AccountViewModels.RegisterViewModel
@{
    ViewData["Title"] = "Register";
    Layout = "_Layout";
}

<br />

<h2>Register <small>for access to SRE</small></h2>

<!-- TODO: Update form to have columns, instead of just straight down the page -->

<div class="card">
    <div class="card-header">
        <h5 class="card-title">Create a new account</h5>
    </div>
    <div class="card-body local-card-body">
        <form asp-controller="Account" asp-action="Register" method="post" novalidate class="needs-validation">
            <!--<div asp-validation-summary="All" class="text-danger"></div>-->

            <div class="form-row">
                <div class="col-md">
                    <label asp-for="FirstName" class="formLabel"></label>
                    <input type="text" asp-for="FirstName" class="form-control" />
                    <div class="invalid-feedback">Your First Name is required.</div>
                </div>
                <div class="col-md">
                    <label asp-for="LastName" class="formLabel"></label>
                    <input type="text" asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>                
            </div>

            <div class="form-row">
                <div class="col-md">
                    <label asp-for="Username" class="formLabel"></label>
                    <input type="text" asp-for="Username" class="form-control" />
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>
                <div class="col-md">
                    <label asp-for="PhoneNumber" class="formLabel"></label>
                    <input type="tel" asp-for="PhoneNumber" class="form-control" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
            </div>

            <div class="form-row">
                <div class="col">
                    <label asp-for="Email" class="formLabel"></label>
                    <input type="email" asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>                
            </div>

            <div class="form-row">
                <div class="col-md">
                    <label asp-for="Password" class="formLabel"></label>
                    <input type="password" asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="col-md">
                    <label asp-for="ConfirmPassword" class="formLabel"></label>
                    <input type="password" asp-for="ConfirmPassword" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>                
            </div>

            <div class="form-row">
                <div class="col-md-6">
                    <label asp-for="AccessCode" class="formLabel"></label>
                    <i class="fas fa-question-circle"  data-toggle="popover" title="Optional" 
                       data-content="Enter an Access Code if you have been provided one. Otherwise, leave the field blank and see the 'Access' page once you create your account." 
                       tabindex="-1" data-trigger="focus"></i>
                    <input type="text" asp-for="AccessCode" class="form-control" />
                    <span asp-validation-for="AccessCode" class="text-danger"></span>
                </div>                
            </div>

            <br />

            <button class="btn btn-primary" type="submit">Register</button>
        </form>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $('[data-toggle="popover"]').popover();

            $('.popover-dismiss').popover({
                trigger: 'focus'
            });
        });

        $(document).ready(function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}
