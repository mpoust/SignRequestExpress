@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"

@{
    ViewData["Title"] = "Admin Home";
    Layout = "_Layout";
}

@section Links{
    <link rel="stylesheet" href="~/lib/tabulator.css" />
}

<br />

<h1> Dashboard <small>- Sign Shop Operations</small></h1>

<br />

<div class="card">
    <div class="card-header">

        <ul class="nav nav-tabs card-header-tabs nav-fill" id="adminTab" role="tablist">

            <li class="nav-item">
                <a class="nav-link active tab-link" id="approve-tab" data-toggle="tab" role="tab" href="#approveTab" aria-controls="approveTab" aria-selected="true"><b>Approve Requests</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="archive-tab" data-toggle="tab" role="tab" href="#archiveTab" aria-controls="archiveTab" aria-selected="false"><b>Approval Archives</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="create-tab" data-toggle="tab" role="tab" href="#createTab" aria-controls="createTab" aria-selected="false"><b>Create Request</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="check-tab" data-toggle="tab" role="tab" href="#checkTab" aria-controls="checkTab" aria-selected="false"><b>Check Status</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="prev-tab" data-toggle="tab" role="tab" href="#prevTab" aria-controls="prevTab" aria-selected="false"><b>My Old Requests</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="log-tab" data-toggle="tab" role="tab" href="#logTab" aria-controls="logTab" aria-selected="false"><b>Request Logs</b></a>
            </li>
        </ul>

    </div>

    <div class="card-body">
        <div class="tab-content" id="adminTabContent">
            <div class="tab-pane fade show active" id="approveTab" role="tabpanel" aria-labelledby="approve-tab">
                <partial name="_ApproveRequestAdminPartial" />
            </div>

            <div class="tab-pane fade" id="archiveTab" role="tabpanel" aria-labelledby="archive-tab">
                <partial name="_ApprovalArchiveAdminPartial" />
            </div>

            <div class="tab-pane fade" id="createTab" role="tabpanel" aria-labelledby="create-tab">
                <partial name="_CreateRequestAdminPartial" />
            </div>

            <div class="tab-pane fade" id="checkTab" role="tabpanel" aria-labelledby="check-tab">
                <partial name="_CheckStatusAdminPartial" />
            </div>

            <div class="tab-pane fade" id="prevTab" role="tabpanel" aria-labelledby="prev-tab">
                <partial name="_PreviousRequestAdminPartial" />
            </div>

            <div class="tab-pane fade" id="logTab" role="tabpanel" aria-labelledby="log-tab">
                <partial name="_RequestLogAdminPartial" />
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript" src="~/lib/tabulator.js"></script>
    <script type="text/javascript" src="~/lib/tabulator-module/ajax.js"></script>
    <script src="~/lib/tabulator-module/mutator.js"></script>
    <script src="~/lib/tabulator-module/format.js"></script>
    <script src="~/lib/moment.js"></script>

    <script>
        Tabulator.prototype.extendModule("mutator", "mutators", {
            statusMutator: function (value, data, type, mutatorParams) {
                if (value == 0) {
                    return "Submitted";
                }
                else if (value == 1) {
                    return "Approved";
                }
                else if (value == 2) {
                    return "In Queue";
                }
                else if (value == 3) {
                    return "Printed";
                } // TODO: Add more values for "Ready (once it is cut, after printed)"
                else return "ERROR";
            },

            mediaMutator: function (value, data, type, mutatorParams) {
                if (value == 1) {
                    return "Adhesive";
                }
                else if (value == 2) {
                    return "Photo Glossy";
                }
                else if (value == 3) {
                    return "Matte Outdoor";
                }
                else if (value == 4) {
                    return "Plasticore";
                }
                else return "ERROR: A1";
            },

            proofMutator: function (value, data, type, mutatorPrams) {
                if (value == false) {
                    return "No";
                }
                else if (value == true) {
                    return "Yes";
                }
                else return "ERROR: A1";
            },

            dimensionMutator: function (value, data, type, mutatorParams) {
                return value + " in.";
            },
        });

        var approveBtn = function (cell, formatterParams) {
            return "<button class=\"btn-orange\">Approve</button>";
        }

        $(document).ready(function () {
            var table = new Tabulator("#approval-table", {
                height: 350,
                columns: [
                    { title: "Num.", field: "requestNumber" },
                    { title: "Status", field: "status", mutator: "statusMutator" },
                    { title: "Associate", field: "associateName" },
                    { title: "Account", field: "accountName" },
                    { title: "Brand", field: "brandName" },
                    { title: "Media", field: "mediaFK", mutator: "mediaMutator" },
                    { title: "Quantity", field: "quantity" },
                    { title: "Width", field: "widthInch", mutator: "dimensionMutator" },
                    { title: "Height", field: "heightInch", mutator: "dimensionMutator" },
                    { title: "Proof", field: "isProofNeeded", mutator: "proofMutator" },
                    {
                        title: "Submitted", field: "requestedDate", formatter: "datetime", formatterParams: {
                            inputFormat: "YYYY-MM-DD hh:mm:ss",
                            outputFormat: "MM/DD/YYYY",
                            invalidPlaceholder: "(invalid date)",
                        },
                    },
                    {
                        title: "Updated", field: "modifiedDateTime", formatter: "datetime", formatterParams: {
                            inputFormat: "YYYY-MM-DD hh:mm:ss",
                            outputFormat: "MM/DD/YY h:mm a",
                            invalidPlaceholder: "(invalid date)",
                        },
                    },
                    //{title: }
                    {
                        formatter: approveBtn, align: "center", cellClick: function (e, cell) {                
                            var row = cell.getRow();
                            var rowIndex = row.getIndex();

                            $.ajax({
                                type: "POST",
                                url: "/Administrator/ApproveRequest",
                                contentType: "application/json; charset=utf-8",
                                dataType: "html",
                                data: JSON.stringify(rowIndex),
                                success: function (result, status, xhr) {
                                    row.update({ "status": "1" });
                                },
                                error: function (xhr, status, error) {
                                    alert("Unable to Approve at this time.");                                    
                                }
                            });
                        }
                    },
                ],
                ajaxConfig: "POST",
                ajaxURL: "/Administrator/GetRequestsForApproval",
            });

            $('#archive-tab').on('click', function () {
                var status = new Tabulator("#archive-table", {
                    height: 350,
                    columns: [
                        { title: "Num.", field: "requestNumber" },                        
                        { title: "Status", field: "status", mutator: "statusMutator" },
                        { title: "Associate", field: "associateName" },
                        { title: "Account", field: "accountName" },
                        { title: "Brand", field: "brandName" },
                        { title: "Media", field: "mediaFK", mutator: "mediaMutator" },
                        { title: "Quantity", field: "quantity" },
                        //{ title: "Dimensions", field: ""} //TODO: map dimensions
                        //{ title: "Brand", } // TODO: map brand
                        { title: "Width", field: "widthInch", mutator: "dimensionMutator" },
                        { title: "Height", field: "heightInch", mutator: "dimensionMutator" },
                        { title: "Proof", field: "isProofNeeded", mutator: "proofMutator" }, //TODO: mutate to yes/no // TODO: add a proof status
                        {
                            title: "Submitted", field: "requestedDate", formatter: "datetime", formatterParams: {
                                inputFormat: "YYYY-MM-DD hh:mm:ss",
                                outputFormat: "MM/DD/YYYY",
                                invalidPlaceholder: "(invalid date)",
                            },
                        },
                        {
                            title: "Updated", field: "modifiedDateTime", formatter: "datetime", formatterParams: {
                                inputFormat: "YYYY-MM-DD hh:mm:ss",
                                outputFormat: "MM/DD/YY h:mm a",
                                invalidPlaceholder: "(invalid date)",
                            },
                        },
                        //{title: }
                    ],
                    ajaxConfig: "POST",
                    ajaxURL: "/Administrator/GetArchiveRequests", // TODO: Write method for the archive requests
                });
            });
        });
    </script>
}