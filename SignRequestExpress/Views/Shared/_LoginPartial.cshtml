@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"

@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form id="logout" asp-controller="Account" role="form" asp-action="Logout">
        <ul class="nav navbar-nav navbar-right">
            <li class="nav-item form-inline">
               <!-- TODO: implement account management <a asp-area="" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a> -->
                <a class="nav-link">Hello @UserManager.GetUserName(User)
                    <span class="glyphicon glyphicon-user"></span>
                </a> <!-- TODO: change to first name -->
            </li>
            <!-- Check security tutorial -- urlaction to return pages based on login, possible roles as well? -->
            <li class="nav-item">
                <button type="submit" class="btn btn-link navbar-btn nav-link">Logout
                    <span class="glyphicon glyphicon-log-out"></span>
                </button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li class="nav-item">
            <a asp-controller="Account" asp-action="Register" class="nav-link">Register</a>
        </li>
        <li class="nav-item">
            <a asp-controller="Account" asp-action="Login" class="nav-link">Login
                <span class="glyphicon glyphicon-log-in"></span>
            </a>
        </li>
    </ul>
}