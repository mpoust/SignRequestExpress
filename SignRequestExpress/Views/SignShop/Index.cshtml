@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"

@{
    ViewData["Title"] = "Sign Shop Home";
    Layout = "_Layout";
}

@section Links{
    <link rel="stylesheet" href="~/lib/tabulator.css" />
}

<br />

<h1>Sign Shop Dashboard <small>- Manage Sign Creation</small></h1>

<br />

<div class="card">
    <div class="card-header">

        <ul class="nav nav-tabs card-header-tabs nav-fill" id="signshopTab" role="tablist">

            <li class="nav-item">
                <a class="nav-link active tab-link" id="queue-tab" data-toggle="tab" role="tab" href="#queueTab" aria-controls="queueTab" aria-selected="true"><b>Request Queue</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="prev-tab" data-toggle="tab" role="tab" href="#prevTab" aria-controls="prevTab" aria-selected="false"><b>Request Archive</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="log-tab" data-toggle="tab" role="tab" href="#logTab" aria-controls="logTab" aria-selected="false"><b>Request Logs</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="template-tab" data-toggle="tab" role="tab" href="#templateTab" aria-controls="templateTab" aria-selected="false"><b>Templates</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="standard-tab" data-toggle="tab" role="tab" href="#standardTab" aria-controls="standardTab" aria-selected="false"><b>Standards</b></a>
            </li>

            <li class="nav-item">
                <a class="nav-link tab-link" id="account-tab" data-toggle="tab" role="tab" href="#accountTab" aria-controls="accountTab" aria-selected="false"><b>Account Management</b></a>
            </li>




        </ul>

    </div>

    <div class="card-body">
        <div class="tab-content" id="signshopTabContent">
            <div class="tab-pane fade show active" id="queueTab" role="tabpanel" aria-labelledby="queue-tab">
                <partial name="_RequestQueuePartial" />
            </div>

            <div class="tab-pane fade" id="prevTab" role="tabpanel" aria-labelledby="prev-tab">
                <partial name="_RequestArchivePartial" />
            </div>

            <div class="tab-pane fade" id="logTab" role="tabpanel" aria-labelledby="log-tab">
                <partial name="_RequestLogSignShopPartial" />
            </div>

            <div class="tab-pane fade" id="templateTab" role="tabpanel" aria-labelledby="template-tab">
                <partial name="_BrandTemplatePartial" />
            </div>

            <div class="tab-pane fade" id="standardTab" role="tabpanel" aria-labelledby="standard-tab">
                <partial name="_BrandStandardPartial" />
            </div>

            <div class="tab-pane fade" id="accountTab" role="tabpanel" aria-labelledby="account-tab">
                <partial name="_AccountManagementSignShopPartial" />
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript" src="~/lib/tabulator.js"></script>
    <script type="text/javascript" src="~/lib/tabulator-module/ajax.js"></script>
    <script src="~/lib/tabulator-module/format.js"></script>
    <script src="~/lib/tabulator-module/mutator.js"></script>
    <script src="~/lib/moment.js"></script>

    <script>
        Tabulator.prototype.extendModule("mutator", "mutators", {
            statusMutator: function (value, data, type, mutatorParams) {
                if (value == 0) {
                    return "Submitted";
                }
                else if (value == 1) {
                    return "Approved";
                }
                else if (value == 2) {
                    return "In Queue";
                }
                else if (value == 3) {
                    return "Printed";
                } // TODO: Add more values for "Ready (once it is cut, after printed)"
                else return "ERROR: S1";
            },

            mediaMutator: function (value, data, type, mutatorParams) {
                if (value == 1) {
                    return "Adhesive";
                }
                else if (value == 2) {
                    return "Photo Glossy";
                }
                else if (value == 3) {
                    return "Matte Outdoor";
                }
                else if (value == 4) {
                    return "Plasticore";
                }
                else return "ERROR: S1";
            },

            proofMutator: function (value, data, type, mutatorPrams) {
                if (value == false) {
                    return "No";
                }
                else if (value == true) {
                    return "Yes";
                }
                else return "ERROR: A1";
            },

            dimensionMutator: function (value, data, type, mutatorParams) {
                return value + " in.";
            },
        }); 

        $(document).ready(function () {

            var table = new Tabulator("#queue-table", {
                height: 350,
                columns: [
                    { title: "Num. ", field: "requestNumber" },
                    { title: "Status", field: "status", mutator: "statusMutator" },
                    { title: "Associate", field: "associateName" },
                    { title: "Account", field: "accountName" },
                    { title: "Brand", field: "brandName" },
                    { title: "Media", field: "mediaFK", mutator: "mediaMutator" },
                    { title: "Quantity", field: "quantity" },
                    { title: "Width", field: "widthInch", mutator: "dimensionMutator" },
                    { title: "Height", field: "heightInch", mutator: "dimensionMutator" },
                    { title: "Proof", field: "isProofNeeded", mutator: "proofMutator" },
                    {
                        title: "Submitted", field: "requestedDate", formatter: "datetime", formatterParams: {
                            inputFormat: "YYYY-MM-DD hh:mm:ss",
                            outputFormat: "MM/DD/YYYY",
                            invalidPlaceholder: "(invalid date)",
                        },
                    },
                    {
                        title: "Updated", field: "modifiedDateTime", formatter: "datetime", formatterParams: {
                            inputFormat: "YYYY-MM-DD hh:mm:ss",
                            outputFormat: "MM/DD/YY h:mm a",
                            invalidPlaceholder: "(invalid date)",
                        },
                    },
                ],
                ajaxConfig: "POST",
                ajaxURL: "/SignShop/GetQueueRequests",
            });

            //$('#prev-tab').click(function () {
            //    table.tabulator("redraw", true);
            //});

            

            $('#prev-tab').on('click', function () {
                var table2 = new Tabulator("#archive-table", {
                    height: 350,
                    columns: [
                        { title: "Num.", field: "requestNumber" },
                        { title: "Status", field: "status", mutator: "statusMutator" },
                        { title: "Associate", field: "associateName" },
                        { title: "Account", field: "accountName" },
                        { title: "Brand", field: "brandName" },
                        { title: "Media", field: "mediaFK", mutator: "mediaMutator" },
                        { title: "Quantity", field: "quantity" },
                        { title: "Width", field: "widthInch", mutator: "dimensionMutator" },
                        { title: "Height", field: "heightInch", mutator: "dimensionMutator" },
                        { title: "Proof", field: "isProofNeeded", mutator: "proofMutator" },
                        {
                            title: "Submitted", field: "requestedDate", formatter: "datetime", formatterParams: {
                                inputFormat: "YYYY-MM-DD h:mm:ss",
                                outputFormat: "MM/DD/YYYY",
                                invalidPlaceholder: "(invalid date)",
                            },
                        },
                        {
                            title: "Updated", field: "modifiedDateTime", formatter: "datetime", formatterParams: {
                                inputFormat: "YYYY-MM-DD hh:mm:ss",
                                outputFormat: "MM/DD/YY h:mm a",
                                invalidPlaceholder: "(invalid date)",
                            },
                        },
                    ],
                    ajaxConfig: "POST",
                    ajaxURL: "/SignShop/GetArchiveRequests",
                });
            });
            
        });

        
        
    </script>
}